---
- name: "Set master manager fact"
  set_fact:
    master_hostname: "{{ groups.masters_manager[0] }}"

- name: "Get host ip address"
  shell:
    cmd: ip addr | grep 'scope global' | grep -v 10.0.2.15 | head -1 | cut -d' ' -f6 | cut -d'/' -f1
  register: host_ip

- name: "Set host ip fact"
  set_fact:
    host_ip: "{{ host_ip.stdout }}"

- name: add public_key to known_host
  ansible.posix.authorized_key:
    key: "{{ hostvars[master_hostname]['ssh_public_key'].stdout }}"
    user: root

- name: "Join the cluster if not alredy present"
  command:
    argv:
      - kubeadm
      - "join"
      - "k8smaster:6443"
      - "--token={{ hostvars[master_hostname]['bootstrap_token'] }}"
      - "--discovery-token-ca-cert-hash={{ hostvars[master_hostname]['discovery_token_hash'] }}"
      - "--control-plane"
      - "--certificate-key={{ hostvars[master_hostname]['certificate_key'] }}"
      - "--apiserver-advertise-address={{ host_ip }}"
    creates: /var/lib/kubelet/config.yaml

- name: "Copy kubeadm flags template"
  template:
    src: kubeadm_flags.env.j2
    dest: /var/lib/kubelet/kubeadm-flags.env
    backup: yes
  register: kubeadm_flags_return

- name: Check if kubelet reload is needed
  shell: >
    ps aux |
    grep '/usr/bin/kubelet' |
    grep -v 'grep' |
    awk 'BEGIN { FS ="--node-ip " } ; { print $2 }' |
    cut -d' ' -f1
  register: check_node_fix

- name: Reload systemctl daemon
  systemd:
    daemon_reload: yes
    name: kubelet
    state: restarted
  when: check_node_fix.stdout != host_ip
